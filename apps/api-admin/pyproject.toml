[tool.poetry]
name = "adyela-api-admin"
version = "0.1.0"
description = "Adyela Admin Microservice - Administrative operations and professional approval"
authors = ["Adyela Team <dev@adyela.com>"]
readme = "README.md"
packages = [{include = "adyela_api_admin"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.9.0"
pydantic-settings = "^2.6.0"
google-cloud-firestore = "^2.19.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
httpx = "^0.28.0"
python-multipart = "^0.0.19"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
ruff = "^0.8.0"
mypy = "^1.13.0"
black = "^24.10.0"
bandit = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP", "ARG", "SIM"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers --tb=short"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["adyela_api_admin"]
omit = ["*/tests/*", "*/__pycache__/*"]
